class Solution:
    def getMaximumGenerated(self,n:int): -> int:
    dp=[0,1]
    for i in range(2, n+1):
        dp +=[dp[i//2]] if i% 2==0 else dp[i//2]+dp[i//2 +1]
        return max(dp[:n+1])
#ОБЪЯСНЕНИЕ
#1.Создается класс Solution, в котором определен метод getMaximumGenerated.
#2.Метод принимает на вход число n.
#3.Создается список dp, начальные значения которого равны 0 и 1.
#4.Затем запускается цикл for, который проходит от 2 до n включительно. На каждой итерации вычисляется новый элемент последовательности следующим образом:
#если i четное, то новый элемент равен dp[i//2]
#если i нечетное, то новый элемент равен сумме dp[i//2] и dp[i//2 + 1]
#5.После того, как все элементы последовательности вычислены, мы находим максимальное значение в подсписке dp[:n+1] с помощью функции max().
#6.Наконец, мы возвращаем найденное максимальное значение.