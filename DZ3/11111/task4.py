class Solution:
    def getDescentPeriods(self,prices: List[int]) -> int:
        result =0
        n =len(prices)
        start = 0
        for i in range(1,n+1):
            if i == n or prices[i] != prices[i-1]-1:
                m = i - start
                result += m * (m+1)//2
                start = i

        return result
#Объяснение
#1.Создается класс Solution, в котором определен метод getDescentPeriods.
#2.Метод принимает на вход список цен на товары prices.
#3.Создается переменная result, которая будет содержать количество периодов спада цен.
#4.Создается переменная n, содержащая длину списка prices.
#5.Создается переменная start, которая содержит индекс начала текущего периода спада цен (начинается с нуля).
#6.В цикле проходим по всем элементам списка prices.
#7.Если текущий элемент является последним в списке (i == n) или он не является следующим элементом после предыдущего элемента с убывающим значением (prices[i] != prices[i-1]-1), то это означает конец текущего периода спада цен.
#8.Вычисляем длину текущего периода спада цен (m = i - start) и добавляем количество периодов спада цен в нем в переменную result. Количество периодов спада цен в подотрезке можно вычислить по формуле m * (m+1)//2.
#9.Обновляем значение переменной start на i, чтобы начать новый период спада цен с последующего элемента.
#10.В конце метода возвращаем значение переменной result, содержащей количество периодов спада цен.
